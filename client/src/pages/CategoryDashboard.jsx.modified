import { useEffect, useState } from "react";
import { FaPlus, FaEdit, FaTrash, FaSave, FaTimes, FaBook } from "react-icons/fa";
import { getCategories } from "../services/filterService";
import { useAuth } from "../context/AuthContext";

export default function CategoryDashboard() {
  const { isLibrarianOrAdmin } = useAuth();
  const [categories, setCategories] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [showForm, setShowForm] = useState(false);
  const [form, setForm] = useState({ name: "", description: "" });
  const [editCategory, setEditCategory] = useState(null);
  const [formError, setFormError] = useState("");
  const [successMsg, setSuccessMsg] = useState("");

  // ... El resto del código debe permanecer igual ...

  return (
    <div className="container mx-auto px-6 py-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold text-blue-700">Gestión de Categorías</h1>
        {isLibrarianOrAdmin() && (
          <button
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center"
            onClick={() => {
              setShowForm(true);
              setEditCategory(null);
              setForm({ name: "", description: "" });
            }}
          >
            <FaPlus className="mr-2" />
            Nueva Categoría
          </button>
        )}
      </div>

      {/* ... Resto del código ... */}

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {categories.map((category) => (
          <div
            key={category.id || category.category_id}
            className="bg-white shadow-md rounded-lg p-6 hover:shadow-lg transition-shadow duration-300"
          >
            <div className="flex justify-between items-start">
              <h3 className="text-lg font-bold text-blue-700 mb-2">{category.name}</h3>
              {isLibrarianOrAdmin() && (
                <div className="flex space-x-2">
                  <button
                    className="text-blue-600 hover:text-blue-800"
                    onClick={() => {
                      setEditCategory(category);
                      setForm({
                        name: category.name,
                        description: category.description || "",
                      });
                      setShowForm(true);
                    }}
                  >
                    <FaEdit />
                  </button>
                  <button
                    className="text-red-600 hover:text-red-800"
                    onClick={() => handleDelete(category)}
                  >
                    <FaTrash />
                  </button>
                </div>
              )}
            </div>
            <p className="text-gray-600 text-sm mb-4 h-12 overflow-hidden">
              {category.description || "Sin descripción"}
            </p>
            <div className="flex items-center text-gray-500 text-sm">
              <FaBook className="mr-1" />
              <span>{category.book_count || 0} libros</span>
            </div>
          </div>
        ))}
      </div>

      {/* ... Resto del código ... */}
    </div>
  );
}
